Title         : Reified Generics
Author        : Gilad Bracha
Logo          : True

[Reified Generics: The Search for the Cure]

# Reified Generics: The Search for the Cure
 

<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">Many have argued that run time access to generic type information is very important. A very bitter debate about this ensued when we added generics to Java. The topic recurs whenever one designs a statically typed object oriented language. Should one reify generic types, or erase them? Java chose erasure, .Net and Dart chose reification, and all three solutions are in my mind unsatisfactory for various reasons, including but not limited to the handling of erasure or its presumed alter ego, reification. </span>
<span id="docs-internal-guid-6e2122d2-7fff-ca0b-45ab-7c215548dba2"></span>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span id="docs-internal-guid-6e2122d2-7fff-ca0b-45ab-7c215548dba2"><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span> <span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><b>Pedantic note 1:</b> Throughout this post, I will use the terms erasure and reification as shorthand for erasure and reification of generic type information.</span></span>
<span id="docs-internal-guid-6e2122d2-7fff-ca0b-45ab-7c215548dba2"><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span> <span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">In a well designed object-oriented language, erasure and reification are not contradictory at all.  This statement might bear some explanation, so here we go ...</span></span></span>
<div>
<span id="docs-internal-guid-6e2122d2-7fff-ca0b-45ab-7c215548dba2"><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></span></div>
</div>
<span id="docs-internal-guid-6e2122d2-7fff-ca0b-45ab-7c215548dba2"> <div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">A while back, I discussed <a href="https://gbracha.blogspot.com/2014/09/a-domain-of-shadows.html">the problem of shadow language constructs</a>. I gave examples of shadow constructs such as Standard ML modules, traditional imports etc. Here is another: reified generics.</span></div>

<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Generics introduce a form a shadow parameterization. Programming languages all have a perfectly good mechanism for declaring parameterized constructs and invoking them. You may have heard of it - it is widely known by the name <i>function</i>, and it goes back to the 17th century.</span>
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span> <span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><b>Pedantic note 2:</b> Yes, programming language functions are usually not mathematical functions. The parameterization mechanism is however, essentially the same.</span>
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span> <span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Generics introduce a different form of formal and actual parameters. There is a purpose to that: static analysis. However, when languages try to provide run time access to these parameters (i.e., reification of generics), we are creating a lobotomized twin of the existing runtime parameter passing system. A new, redundant, confusing and costly set of mechanisms is added to the run time in order to declare, pass, store and access these parameters. </span>

</div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">The first guiding principle of any solution is to avoid shadow constructs. We already have parameterization support, let's use it. </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;"> </span>
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span> 
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Generics are functions from types to types, typically classes to classes. </span>
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span> <span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;"><b style="font-size: 14.6667px;">Pedantic note 3:</b><span style="font-size: 14.6667px;">  If your language is prototype based, generics might be considered functions between prototypes. If your language has primitive types - well, you're up the creek without a paddle anyway. <a href="https://gbracha.blogspot.com/2009/05/original-sin.html">There is no justification for primitive types in an object oriented language</a>.</span></span>
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span> <span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">If classes are expressions, we can write reified generics as ordinary functions. Here's some sample pseudo-code. It's given in a quasi-standard syntax, so I don't waste time explaining Newspeak syntax.</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"><b>public var</b></span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> List = (</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;">function</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">(</span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">T)</span><span style="background-color: transparent; color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">{</span><span style="background-color: transparent; color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;">return</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;">class</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> {</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;    </span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre;"><b>var</b></span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">hd, tl</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> Link {</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> datum;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> next;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;">public</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">elementType()</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> { </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;">return</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> T}</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> add(e</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">)</span><span style="background-color: transparent; color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> </span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">{</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;">var</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> tmp </span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">:= Link new.</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp.datum := e;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp.next := hd;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tl := hd;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hd := tmp;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre;">return</span><span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> e;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"> &nbsp;}</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span id="docs-internal-guid-0cc0c0b7-7fff-819e-b002-73da3dc7320a"></span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">}).memoize();</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;">
</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre;"><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; font-size: small; font-style: normal; white-space: normal;">&nbsp;</span><span style="font-family: &quot;arial&quot;; font-size: 14.6667px; font-style: normal;">Here's a summary of what the above means:</span></span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
</div>
<ul>
<li><span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">We declare a variable named <i>List</i>, initialized to a closure.</span></span></li>
<li><span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">The closure takes a class <i>T</i> as a parameter and returns a class as its result.</span></span></li>
<li><span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">The result class is specified via a <i><b>class expression</b></i>, which implements a linked list.</span></span></li>
<li><span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">The class expression includes a nested class declaration, <i>Link</i>.</span></span></li>
<li><span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">The method <i>memoize()</i> is called on the closure to, well, memoize it. <i>Memoize()</i> returns a memoized version of its receiver.</span></span></li>
</ul>
<div dir="ltr" style="background-color: white; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">Each call to <i>List()</i> returns a list class specialized to the actual parameter of <i>List()</i>.  We can create a list of integers by saying </span></span></div>
<div dir="ltr" style="background-color: white; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;">
</span></span></div>
<div dir="ltr" style="background-color: white; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;;"><span style="font-size: 14.6667px; white-space: pre-wrap;"><i><b>var</b> lst := List(Integer).new();</i></span></span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">and we can dynamically check what type of elements <i>lst</i> holds</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><i>lst.elementType(); // returns Integer, the class object reifying the integer type.</i></span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">

</div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">The reified element type is shared among all instances of a given list class, because it is stored in the closure surrounding the class. We avoid duplicating classes with the same parameters - this is just function memoization (and I assume a <i>memoize()</i> method on closures for this purpose). </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">All this works independent of any static types. We are just using standard runtime mechanisms like closures, memoized functions, objects representing classes and yes, class expressions. Smalltalk had these, in essence, over 40 years ago.</span>
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span> <span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">What if I don't have class expressions? Well, don't you know that everything should be an expression? Besides, this works fine if you have the ability to define classes reflectively like Smalltalk, or </span><span style="color: black; font-family: &quot;arial&quot;; font-size: 14.6667px; white-space: pre-wrap;">have properly defined nested classes like Newspeak, </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;"> though it may be a bit more verbose and require more library support to be palatable.</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">Now let's add types. In the code below, <b>t</b></span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 14.6667px; white-space: pre-wrap;"><b>ype annotations are completely optional, and have absolutely no runtime effect</b>. They are shown in </span><span style="background-color: transparent; color: blue; font-family: &quot;arial&quot;; font-size: 14.6667px; white-space: pre-wrap;">blue</span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 14.6667px; white-space: pre-wrap;">. </span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"><b>public var</b></span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> List = (</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;">function</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">(</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">T</span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> : Class</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">)</span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">{</span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;">return</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;">class</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> {</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;    <b>var</b> </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">hd, tl</span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> : Link</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> Link {</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> datum </span><span style="color: blue;"><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">: </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">T</span></span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> next :</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"><span style="color: blue;"> Link</span></span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;">public</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">elementType() </span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">: Class</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> { </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;">return</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> T}</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> add:(e </span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">: T</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">)</span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> : T</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> {</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;">var</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> tmp: </span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">Link</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> := Link new.</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp.datum := e;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp.next := hd;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tl := hd;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hd := tmp;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;">return</span><span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> e;</span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="color: #222222; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"> &nbsp;}</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span id="docs-internal-guid-0cc0c0b7-7fff-819e-b002-73da3dc7320a"></span></div>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">}).memoize();</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 14.6667px; white-space: pre-wrap;">You may notice one odd thing - we use the name of the formal parameter to the closure, </span><i style="font-family: Arial; font-size: 14.6667px; white-space: pre-wrap;">T</i><span style="font-family: &quot;arial&quot;; font-size: 14.6667px; white-space: pre-wrap;">, as a type. This is justified by the following rule.</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">

</div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><b>Rule 1:</b> In any method or closure <i>m</i>, a formal parameter </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">T</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"> of type </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"><span style="color: blue;">Class</span></span><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"> (or any subtype thereof) implicitly defines a type variable </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"><span style="color: blue;">T</span> </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">which is in scope in type expressions from the point </span><span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">T</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"> is declared to the end of the method/closure</span><span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">. </span></div>
<div dir="ltr" style="line-height: 1.656; margin-bottom: 0pt; margin-top: 0pt;">

</div>
<div dir="ltr" style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Next, we need to be able to use the information given by the declaration of <i>List</i> when we write types like </span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><i><span style="color: blue;">List[Integer]</span></i></span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">. We use the following rule.</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><b>Rule 2:</b></span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"> If </span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">e</span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"> is an expression of function type with parameter(s) of type </span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"><span style="color: blue;">Class</span></span><span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"> and return type </span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 14.6667px; font-style: italic; white-space: pre-wrap;">Class</span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">, </span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">e</span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">'s name</span><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"> can be used inside a type expression as a type function;  an invocation of the type function <i>e[T1, ..., Tn]</i> denotes the type of the instances of the class returned by the value expression </span></div>
<div dir="ltr" style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<i style="font-family: Arial; font-size: 14.6667px; white-space: pre-wrap;">e(T1, ..., Tn)</i><span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">. </span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; color: black; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">We can then write, and typecheck </span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span id="m_-4391720801157067180gmail-m_2703046546755666277gmail-docs-internal-guid-9465bad9-7fff-a555-ceac-831a714b081f">
</span></div>
<div dir="ltr" style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<i style="color: black; font-family: Arial; font-size: 14.6667px; white-space: pre-wrap;"><b>var</b> lst </i><span style="color: blue;"><i style="font-family: Arial; font-size: 14.6667px; white-space: pre-wrap;">:</i><i style="background-color: transparent; font-family: Arial; font-size: 14.6667px; white-space: pre-wrap;"> </i></span><span style="color: blue; font-family: &quot;arial&quot;; font-size: 14.6667px; font-style: italic; white-space: pre-wrap;">List[Integer] </span><i style="color: black; font-family: Arial; font-size: 14.6667px; white-space: pre-wrap;">:= List(Integer).new();</i></div>
<div style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"><span style="color: #222222;"><b>var</b> i </span><span style="color: blue;">: Integer</span><span style="color: #222222;"> := lst.add(3) + 4;</span></span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">

</div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Oh, and we can still do this: </span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><i style="color: black; font-size: 14.6667px;">lst.elementType(); // returns Integer, the class object reifying the integer type.</i></span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><i style="color: black; font-size: 14.6667px;">
</i></span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><span style="color: black; font-family: &quot;arial&quot;; font-size: 14.6667px;">Similarly, if you wish to create new instances of the incoming type parameters, you should be able to do that in the above regime - though you will have to confront the fact that different subtypes may have different constructors and plan around that explicitly - say, by defining a common construction interface for these types. </span></span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">The beauty of this scheme is that no runtimes were harmed in the making of this reified generic type system. The type system is completely optional. And this is my point: reification was there all along. The typechecker simply needs to understand this fact and leverage it.  The basic approach would work with any language with types reified as values, regardless of whether it has generics. </span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="background-color: transparent; font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Interestingly, we now have reification of generics, and erasure, at the same time. The two are not in conflict. Reification is supported by the normal runtime mechanisms, independent of types, which are optional and always erased, carrying no runtime cost or semantics.</span></div>
<div dir="ltr" style="background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">

</div>
</div>
</span>
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Reification of generics is now a choice for library implementers. If they think it is worthwhile to pay the costs, so that, for example, someone can cheaply test if a collection is a collection of integers or a collection of strings, they are free to do so. </span>
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span> <span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;"><span style="font-size: 14.6667px;">If they don't want to pay a price for reification but still want to typecheck generics, they can do that too. Nothing prevents one from explicitly declaring type parameters (as opposed to the implicit ones derived from the class-valued value parameters used for reification).</span></span></div>

<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;"><b>Tangent, TL; DR:</b> Now is the time to mention that traditional reification of generics - that is, runtime support for a shadow parameterization mechanism - is a disaster. It hurts performance in both space and time; Just ask the brave VM engineers who struggled with these issues on the Dart VM. Mitigating that introduces enormous complexity into the runtime and requires a huge effort, which would be better spent doing something good and useful instead.</span></div>

<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">In systems designed to support multiple programming languages, reification brings a different problem. All languages must deal with the complexity of reification; worse they must conform to the expectations of the reified generic type system of the "master language" (C# or Java, for example). </span></div>

<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">Consider .Net, the poster child of generic reification. Originally, .Net was intended to be a multi-language system, but dynamic language support there has suffered, in no small part due to reification. Visual Basic was a huge success until .Net came along and made it conform to C#. And what Iron Ruby/Python programmer ever enjoyed being forced to feed type arguments (whatever those might be) into a collection they are creating? </span></div>

<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;">In contrast, the JVM was conceived as a monolingual system. Sun management deluded themselves that Java was the ultimate programming language (though yours truly did try to hint, ever so gently, that further progress in PL was at least conceivable). And yet, the JVM has become home to a wide variety of languages. This is due to multiple factors, invokedynamic not the least among them. But erasure plays a crucial and underappreciated role here as well. If not for erasure, the JVM would have the above-mentioned problems wrt dynamic languages, just like .Net.</span></div>
<span style="font-family: &quot;arial&quot;; font-size: 11pt; white-space: pre-wrap;">
</span> 
<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">Of course, generics have many issues that are independent of reification. The great difficulties with generics come up when they interact with subtyping. All the problems of variance, as well as inference, are rooted in that interaction. If you are happy with any existing approach, you should be able to incorporate it into the above reification strategy - but I am not aware of any pre-existing generic design that I would consider satisfactory. </span></div>

<div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;">
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">I think I may now have a plausible approach to the typing issues, but the margins of this blog are too narrow to contain it. &nbsp;A follow up post will either make it all clear, or confess that it hasn't worked out. The above comments on reification stand on their own in any case.</span></div>
<div>
<span style="font-family: &quot;arial&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;">
</span></div>
</div>
